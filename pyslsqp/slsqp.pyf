! Copyright (c) 2001-2002 Enthought, Inc. 2003-2024, SciPy Developers.
! All rights reserved.

! Redistribution and use in source and binary forms, with or without
! modification, are permitted provided that the following conditions
! are met:

! 1. Redistributions of source code must retain the above copyright
!    notice, this list of conditions and the following disclaimer.

! 2. Redistributions in binary form must reproduce the above
!    copyright notice, this list of conditions and the following
!    disclaimer in the documentation and/or other materials provided
!    with the distribution.

! 3. Neither the name of the copyright holder nor the names of its
!    contributors may be used to endorse or promote products derived
!    from this software without specific prior written permission.

! THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
! "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
! LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
! A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
! OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
! SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
! LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
! DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
! THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
! (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
! OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _slsqp ! in 
    interface  ! in :slsqp
        subroutine slsqp(m,meq,la,n,x,xl,xu,f,c,g,a,acc,iter,mode,w,l_w,jw,l_jw,alpha,f0,gs,h1,h2,h3,h4,t,t0,tol,iexact,incons,ireset,itermx,line,n1,n2,n3) ! in :slsqp:slsqp_optmz.f
            integer :: m
            integer :: meq
            integer optional,check(len(c)>=la),depend(c) :: la=len(c)
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            double precision dimension(n), intent(inout) :: x
            double precision dimension(n),depend(n) :: xl
            double precision dimension(n),depend(n) :: xu
            double precision :: f
            double precision dimension(la) :: c
            double precision dimension(n + 1),depend(n) :: g
            double precision dimension(la,n + 1),depend(la,n) :: a
            double precision, intent(inout) :: acc
            integer, intent(inout) :: iter
            integer, intent(inout) :: mode
            double precision dimension(l_w) :: w
            integer optional,check(len(w)>=l_w),depend(w) :: l_w=len(w)
            integer dimension(l_jw) :: jw
            integer optional,check(len(jw)>=l_jw),depend(jw) :: l_jw=len(jw)
            double precision, intent(inout) :: alpha
            double precision, intent(inout) :: f0
            double precision, intent(inout) :: gs
            double precision, intent(inout) :: h1
            double precision, intent(inout) :: h2
            double precision, intent(inout) :: h3
            double precision, intent(inout) :: h4
            double precision, intent(inout) :: t
            double precision, intent(inout) :: t0
            double precision, intent(inout) :: tol
            integer, intent(inout) :: iexact
            integer, intent(inout) :: incons
            integer, intent(inout) :: ireset
            integer, intent(inout) :: itermx
            integer, intent(inout) :: line
            integer, intent(inout) :: n1
            integer, intent(inout) :: n2
            integer, intent(inout) :: n3
        end subroutine slsqp
    end interface 
end python module _slsqp

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
